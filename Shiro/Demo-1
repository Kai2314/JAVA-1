web.xml
<filter>  
    <filter-name>shiroFilter</filter-name>  
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
    <init-param>  
        <param-name>targetFilterLifecycle</param-name>  
        <param-value>true</param-value>  
    </init-param>  
</filter>  
<filter-mapping>  
    <filter-name>shiroFilter</filter-name>  
    <url-pattern>/*</url-pattern>  
</filter-mapping>


======applicationContext-shiro-demo.xml=======

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- 緩存管理器 使用Ehcache實現 -->  
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
	    <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>  
	</bean>
	
	<!-- 憑證匹配器 -->  
	<bean id="hashexCredentialsMatcher" class="com.pic.framework.shiroDemo.RetryLimitHashedCredentialsMatcher">  
	    <constructor-arg ref="cacheManager"/>  
	    <property name="hashAlgorithmName" value="md5"/>  
	    <property name="hashIterations" value="2"/>  
	    <property name="storedCredentialsHexEncoded" value="true"/>  
	</bean>
	
	<!-- 憑證匹配器 -->
	<bean id="simpleCredentialsMatcher" class="com.pic.framework.shiroDemo.RetryLimitSimpleCredentialsMatcher">  
	    <constructor-arg ref="cacheManager"/>
	</bean>
	
	<!-- Realm實現 -->
  <bean id="userRealm" class="com.pic.framework.shiroDemo.UserRealm">
  	<!--  <property name="credentialsMatcher" ref="hashexCredentialsMatcher"/>-->
  	<property name="credentialsMatcher" ref="simpleCredentialsMatcher"/>
  	
      <property name="cachingEnabled" value="true"/>
      <property name="authenticationCachingEnabled" value="true"/>
     	<property name="authenticationCacheName" value="authenticationCache"/>
      <property name="authorizationCachingEnabled" value="true"/>
      <property name="authorizationCacheName" value="authorizationCache"/>
  </bean>
    
    <!-- 會話ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    
    <!-- 會話Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="180000"/>
    </bean>
    
    <!-- 會話DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    
    
    <!-- 會話驗證調度器
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>	 
     -->
  <!-- 會話管理器   
	<bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">  
	    <property name="globalSessionTimeout" value="1800000"/>  
	    <property name="deleteInvalidSessions" value="true"/>  
	    <property name="sessionValidationSchedulerEnabled" value="true"/>  
	   	<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
	    <property name="sessionDAO" ref="sessionDAO"/>  
	</bean> 
  -->
    
  <!-- 安全管理器 -->
  <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
      <!--  <property name="realm" ref="userRealm"/> -->
      <property name="realms">
      	<list><ref bean="userRealm"/></list>
      </property>
      <!--  <property name="sessionManager" ref="sessionManager"/>  
  	<property name="cacheManager" ref="cacheManager"/>  -->
  </bean>
  
<!-- 相當於调用SecurityUtils.setSecurityManager(securityManager) -->
<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
    <property name="arguments" ref="securityManager"/>
</bean>
	
<!-- Shiro的Web過濾器 -->
<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"/>
    <property name="loginUrl" value="/app_tab/mainApp/views/login.html"/>
    <property name="filterChainDefinitions">
    	<value>
    		/css/** = anon
    		/Kaptcha.jpg = anon
		/app_tab/mainApp/views/** = authc
    	</value>
    </property>
    
</bean>
  
  <!--  
	/login.jsp = anon
	/login = authc
    /logout = logout
    /authenticated = authc
    /assets/** = anon
	/user/signup = anon
	/user/** = user
	/rpc/rest/** = perms[rpc:invoke], authc
	/** = authc
  -->
	
	
	<!-- Shiro生命周期處理器-->
  <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
</beans>
